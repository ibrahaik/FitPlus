Aplicación fitness totalmente funcional creada con React native con Expo, Node.js con Express, PostgreSQL, FireBase, Cloudinary, Ngrok, JavaScript, el usuario cuando se registra se le despliegan una serie de comunidades (Hacen referencia a una región de España) cuando el usuario selecciona una comunidad se le enlaza directamente con ella y accede a un chat global con miembros de esa misma comunidad, además se le muestra un feed de post y vídeos que publican los administradores, pueden comentar y dar me gusta, existe una sección de retos que publican los administradores donde pueden acceder y completarlos, los retos se complenta abriendo la cámara de la app y grabandote completandolos, estos vídeos llegan a la administración la cual decide si aprobar el vídeo o no, si lo aprueban se le asigna una cantidad de puntos al usuario, esa cantidad de puntos se le suman a su balance y pueden canjearlos en la tienda virtual por suplementos o productos deportivos, además cuentan con una sección de mi perfil donde pueden gestionar su información, la app consta de un portal de administración.Add commentMore actions

# 💪 Golden Bulk - Aplicación Fitness

**Golden Bulk** es una aplicación móvil de fitness desarrollada con **React Native + Expo** que promueve la actividad física mediante retos comunitarios, interacción social en tiempo real y una tienda virtual de recompensas. Es parte de una solución completa que incluye backend en Node.js y otras herramientas modernas.

---

## 🧠 Funcionalidades principales

- **Registro y Comunidad:**  
  Al registrarse, el usuario elige una comunidad (representa una región de España) y accede directamente a:
  - Un **chat global** en tiempo real con miembros de esa comunidad.
  - Un **feed de publicaciones** de administradores (posts + vídeos).
  - Interacciones sociales: comentarios y "me gusta".

- **Retos Fitness:**  
  - Los administradores publican retos que los usuarios pueden completar grabando un vídeo desde la cámara de la app.
  - El vídeo es revisado por la administración.
  - Si es aprobado, el usuario gana **puntos** que se suman a su balance.

- **Tienda Virtual:**
  - Los puntos obtenidos pueden canjearse por suplementos y productos deportivos.
  - Compra y visualización de productos dentro de la app.

- **Perfil de Usuario:**
  - Edición de información personal.
  - Visualización del saldo de puntos.

- **Portal de Administración:**
  - Publicar y actualizar retos.
  - Aprobar vídeos enviados por usuarios.
  - Crear y gestionar productos y publicaciones.

---

## 📱 Tecnologías utilizadas

### 🧩 Frontend
- [React Native](https://reactnative.dev/) + [Expo](https://expo.dev/)
- React Navigation
- Firebase Realtime Database (para el chat y presencia)
- Cloudinary (gestión de imágenes y vídeos)
- Camera & MediaLibrary (Expo plugins)
- Ngrok (para exponer el backend local)
- Axios (peticiones HTTP)

### 🛠️ Backend (requiere proyecto complementario)
- Node.js + Express
- PostgreSQL
- JWT para autenticación

---

## 📂 Estructura del Proyecto (Frontend)

```
ibrahaik-golden_bulk_frontend/
├── App.js
├── screens/
│   ├── Login.js, Register.js, Home.js, Chat.js...
│   ├── CrearReto.js, ActualizarReto.js
│   ├── Perfil.js, Retos.js, VideosUpload.js
│   └── Pasarela.js
├── components/
│   ├── HomeHeader.js, HomeContent.js
│   ├── AdminContent.js, TiendaContent.js
│   └── TabNavigator.js, DrawerMenu.js
├── firebase.js
├── api.js (config axios + ngrok)
├── package.json
└── app.json
```

---

## 🔧 Instalación local

1. Clonar el repositorio del frontend:

```bash
git clone <URL_DEL_REPOSITORIO>
cd ibrahaik-golden_bulk_frontend
```

2. Instalar dependencias:

```bash
npm install
```

3. Iniciar la app:

```bash
npm start
```

4. Escanea el código QR con Expo Go (iOS/Android) o lanza el emulador.

---

## 🔐 Requisitos

- Tener corriendo el **backend** (Express + PostgreSQL).
- Configurar tu endpoint `ngrok` en `api.js`:
```js
const API_BASE = 'https://<tu-ngrok-url>.ngrok-free.app';
```

- Configurar Firebase (`firebase.js`) con tus credenciales.

---

## 📌 Estado del Proyecto

✅ Completado y funcional para pruebas y demostraciones.  
🔒 Autenticación con JWT integrada.  
🌍 Comunicación global por comunidades usando Firebase.


Desarrollado por Ibrahim Haik
🔗 [https://es.linkedin.com/in/ibrahim-haik-a12654226 / https://github.com/ibrahaik]
